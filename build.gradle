// Default tasks
defaultTasks 'licenseFormatMain', 'licenseFormatTest', 'clean', 'build', 'shadowJar'

// Apply plugins
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'shadow'

// Basic project information
group = 'org.spoutcraft'
archivesBaseName = 'client'
version = '1.0.0-SNAPSHOT'
mainClassName = "org.spoutcraft.client.Main"

// Extended project information
ext.projectName = 'Client'
ext.inceptionYear = '2013'
ext.currentYear = '2014'
ext.packaging = 'jar'
ext.url = 'http://spoutcraft.org'
ext.description = 'Open source, multi-threaded Minecraft client written in Java.'
ext.organization = 'Spoutcraft'

// Minimum version of Java required
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

// Define variables
ext.buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
ext.ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
ext.commit = project.hasProperty("commit") ? commit : 'unknown'

// Configuration settings
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // Always check for new snapshots
}

// Plugin repositories and dependencies
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'sonatype-nexus-public'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.7.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
    }
}

// Non-plugin repositories and dependencies
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'sonatype-nexus-public'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
}
dependencies {
    compile 'com.flowpowered:flow-chat-commands:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-commons:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-networking:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-noise:0.1.0-SNAPSHOT'
    compile 'com.github.wolf480pl:jline-log4j2-appender:0.0.1-SNAPSHOT'
    compile 'io.netty:netty-all:4.0.14.Final'
    compile 'junit:junit:4.8.2'
    compile 'org.apache.logging.log4j:log4j-api:2.0-beta9'
    compile 'org.apache.logging.log4j:log4j-core:2.0-beta9'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0-beta9'
    compile 'org.spout:caustic-lwjgl:2.0.2-SNAPSHOT'
    compile 'org.spout:react:1.0.0-SNAPSHOT'
    testCompile 'junit:junit:4.8.2'
}

// Filter, process, and include resources
processResources {
    from(rootProject.rootDir) {
        include 'LICENSE.txt'
    }
}

// Include dependencies in final JAR
shadow {
    artifactAttached = false
    include '**'
    exclude 'junit/**'
}

// License header formatting
import nl.javadude.gradle.plugins.license.License
tasks.withType(License).each { licenseTask ->
    licenseTask.exclude '**/*.frag'
    licenseTask.exclude '**/*.ttf'
    licenseTask.exclude '**/*.vert'
    licenseTask.exclude '**/*.yml'
    licenseTask.exclude '**/*.xml'
}
license {
    ext.name = projectName
    ext.organization = organization
    ext.url = url
    ext.year = inceptionYear + '-' + currentYear
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
}

// Source compiler configuration
configure([compileJava, compileTestJava]) {
    options.compilerArgs << '-Xlint:all'
    options.compilerArgs << '-Xlint:-path'
    options.deprecation = true
}

// JAR manifest configuration
manifest.mainAttributes(
        "Main-Class": mainClassName,
        "Built-By": System.properties['user.name'],
        "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        "Implementation-Title": name,
        "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
        "Implementation-Vendor": url)
